# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $alt Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 8
# font pango:DejaVu Sans Mono 9
# font pango:DejaVu Sans Mono 10

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
# Enable IME support in kitty terminal - https://bbs.archlinux.org/viewtopic.php?id=301432
bindsym $mod+Return exec GLFW_IM_MODULE=ibus kitty

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec "dmenu_run -p 'Run: '"
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# switch to next workspace
bindsym $mod+Tab workspace back_and_forth
bindsym $mod+Shift+Tab workspace prev

# swap with adjacent window (left right) and maintain the original window size
bindsym $mod+a mark A; focus left; swap container with mark A; unmark A;
bindsym $mod+s mark A; focus right; swap container with mark A; unmark A;
# swap with adjacent window (up down) and maintain the original window size
bindsym $mod+x mark A; focus down; swap container with mark A; unmark A;

# split in horizontal orientation
# bindsym $mod+b split h
# split in vertical orientation
# bindsym $mod+v split v
# split toggle
bindsym $mod+u split toggle

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+s layout stacking
# bindsym $mod+w layout tabbed
# bindsym $mod+e layout toggle split
# https://stackoverflow.com/a/69113017
bindsym $mod+e layout toggle splith tabbed stacked splitv
bindsym $mod+w layout toggle splitv stacked tabbed splith


# toggle tiling / floating
bindsym $mod+Shift+space floating toggle
bindsym --whole-window $mod+Shift+button3 floating toggle
# toggle sticky
bindsym --whole-window $mod+Ctrl+button3 sticky toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+y focus parent

# focus the child container
bindsym $mod+shift+y focus child

# workspace variables
set $workspace1 "1"
set $workspace2 "2"
set $workspace3 "3"
set $workspace4 "4"
set $workspace5 "5"
set $workspace6 "6"
set $workspace7 "7"
set $workspace8 "8"
set $workspace9 "9"
set $workspace0 "0"
set $workspace11 "11"
set $workspace12 "12"
set $workspace13 "13"
set $workspace14 "14"
set $workspace15 "15"
set $workspace16 "16"
set $workspace17 "17"
set $workspace18 "18"
set $workspace19 "19"

# switch to workspace
bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8
bindsym $mod+9 workspace $workspace9
bindsym $mod+0 workspace $workspace0
bindsym $mod+Ctrl+1 workspace $workspace11
bindsym $mod+Ctrl+2 workspace $workspace12
bindsym $mod+Ctrl+3 workspace $workspace13
bindsym $mod+Ctrl+4 workspace $workspace14
bindsym $mod+Ctrl+5 workspace $workspace15
bindsym $mod+Ctrl+6 workspace $workspace16
bindsym $mod+Ctrl+7 workspace $workspace17
bindsym $mod+Ctrl+8 workspace $workspace18
bindsym $mod+Ctrl+9 workspace $workspace19

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $workspace1 
bindsym $mod+Shift+2 move container to workspace $workspace2 
bindsym $mod+Shift+3 move container to workspace $workspace3 
bindsym $mod+Shift+4 move container to workspace $workspace4
bindsym $mod+Shift+5 move container to workspace $workspace5
bindsym $mod+Shift+6 move container to workspace $workspace6
bindsym $mod+Shift+7 move container to workspace $workspace7
bindsym $mod+Shift+8 move container to workspace $workspace8
bindsym $mod+Shift+9 move container to workspace $workspace9
bindsym $mod+Shift+0 move container to workspace $workspace0
bindsym $mod+Shift+Ctrl+1 move container to workspace $workspace11
bindsym $mod+Shift+Ctrl+2 move container to workspace $workspace12
bindsym $mod+Shift+Ctrl+3 move container to workspace $workspace13
bindsym $mod+Shift+Ctrl+4 move container to workspace $workspace14
bindsym $mod+Shift+Ctrl+5 move container to workspace $workspace15
bindsym $mod+Shift+Ctrl+6 move container to workspace $workspace16
bindsym $mod+Shift+Ctrl+7 move container to workspace $workspace17
bindsym $mod+Shift+Ctrl+8 move container to workspace $workspace18
bindsym $mod+Shift+Ctrl+9 move container to workspace $workspace19

# if there is parent in group of containers, switch to parent before switch to other container
# https://www.reddit.com/r/i3wm/comments/4w0otj/is_there_a_way_to_switch_to_the_next_tab/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button
bindsym $mod+Ctrl+h focus parent; focus left; focus child
bindsym $mod+Ctrl+Left focus parent; focus left; focus child
bindsym $mod+Ctrl+l focus parent; focus right; focus child
bindsym $mod+Ctrl+Right focus parent; focus right; focus child
bindsym $mod+Ctrl+j focus parent; focus down; focus child
bindsym $mod+Ctrl+Down focus parent; focus down; focus child
bindsym $mod+Ctrl+k focus parent; focus up; focus child
bindsym $mod+Ctrl+Up focus parent; focus up; focus child

# Assign app to workspace
# assign [class="Brave-browser"] $workspace3
# assign [class="Code"] $workspace1

# reload the configuration file
# bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
# These bindings trigger as soon as you enter the resize mode

# Pressing left will shrink the window’s width.
# Pressing right will grow the window’s width.
# Pressing up will shrink the window’s height.
# Pressing down will grow the window’s height.
    bindsym h resize shrink width 10 px or 10 ppt
    bindsym j resize grow height 10 px or 10 ppt
    bindsym k resize shrink height 10 px or 10 ppt
    bindsym l resize grow width 10 px or 10 ppt

# same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

# back to normal
    bindsym $mod+r mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

bindsym $mod+r mode "resize"

# border color
# client.focused #ffd700 #2a2a2a #ffffff #8be503 #ffd700
# client.focused #4C7899 #285577 #FFFFFF #2E9EF4   #285577
client.focused #e2513b #e2513b #000000 #e29c3b  #e2513b 
# client.unfocused #2a2a2a #2a2a2a #ffffff #2a2a2a #2a2a2a

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    status_command i3status | $HOME/.local/bin/i3status_wrapper.py
# system try to be shown on the primary monitor
# https://i3wm.org/docs/userguide.html#_tray_output
    tray_output primary
# https://i3wm.org/docs/userguide.html#_display_mode
# by default the bar is dock mode
# see $HOME/.local/bin/toggle_i3_bar.sh file to toggle the bar mode
    mode dock
}

bindsym $mod+b exec --no-startup-id sh -c '$HOME/.local/bin/toggle_i3_bar.sh'

# i3-gap
set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
    bindsym o      mode "$mode_gaps_outer"
    bindsym i      mode "$mode_gaps_inner"
    bindsym h      mode "$mode_gaps_horiz"
    bindsym v      mode "$mode_gaps_verti"
    bindsym t      mode "$mode_gaps_top"
    bindsym r      mode "$mode_gaps_right"
    bindsym b      mode "$mode_gaps_bottom"
    bindsym l      mode "$mode_gaps_left"
    bindsym Return mode "$mode_gaps"
    bindsym Ctrl+bracketleft mode "default"
    bindsym $mod+Shift+g mode "default"
}

mode "$mode_gaps_outer" {
    bindsym plus  gaps outer current plus 5
    bindsym minus gaps outer current minus 5
    bindsym 0     gaps outer current set 0

    bindsym Shift+plus  gaps outer all plus 5
    bindsym Shift+minus gaps outer all minus 5
    bindsym Shift+0     gaps outer all set 0

    bindsym Return mode "$mode_gaps"
    bindsym Ctrl+bracketleft mode "default"
    bindsym $mod+Shift+g mode "default"
}
mode "$mode_gaps_inner" {
    bindsym plus  gaps inner current plus 5
    bindsym minus gaps inner current minus 5
    bindsym 0     gaps inner current set 0

    bindsym Shift+plus  gaps inner all plus 5
    bindsym Shift+minus gaps inner all minus 5
    bindsym Shift+0     gaps inner all set 0

    bindsym Return mode "$mode_gaps"
    bindsym Ctrl+bracketleft mode "default"
    bindsym $mod+Shift+g mode "default"
}
mode "$mode_gaps_horiz" {
    bindsym plus  gaps horizontal current plus 5
    bindsym minus gaps horizontal current minus 5
    bindsym 0     gaps horizontal current set 0

    bindsym Shift+plus  gaps horizontal all plus 5
    bindsym Shift+minus gaps horizontal all minus 5
    bindsym Shift+0     gaps horizontal all set 0

    bindsym Return mode "$mode_gaps"
    bindsym Ctrl+bracketleft mode "default"
    bindsym $mod+Shift+g mode "default"
}
mode "$mode_gaps_verti" {
    bindsym plus  gaps vertical current plus 5
    bindsym minus gaps vertical current minus 5
    bindsym 0     gaps vertical current set 0

    bindsym Shift+plus  gaps vertical all plus 5
    bindsym Shift+minus gaps vertical all minus 5
    bindsym Shift+0     gaps vertical all set 0

    bindsym Return mode "$mode_gaps"
    bindsym Ctrl+bracketleft mode "default"
    bindsym $mod+Shift+g mode "default"
}
mode "$mode_gaps_top" {
    bindsym plus  gaps top current plus 5
    bindsym minus gaps top current minus 5
    bindsym 0     gaps top current set 0

    bindsym Shift+plus  gaps top all plus 5
    bindsym Shift+minus gaps top all minus 5
    bindsym Shift+0     gaps top all set 0

    bindsym Return mode "$mode_gaps"
    bindsym Ctrl+bracketleft mode "default"
    bindsym $mod+Shift+g mode "default"
}
mode "$mode_gaps_right" {
    bindsym plus  gaps right current plus 5
    bindsym minus gaps right current minus 5
    bindsym 0     gaps right current set 0

    bindsym Shift+plus  gaps right all plus 5
    bindsym Shift+minus gaps right all minus 5
    bindsym Shift+0     gaps right all set 0

    bindsym Return mode "$mode_gaps"
    bindsym Ctrl+bracketleft mode "default"
    bindsym $mod+Shift+g mode "default"
}
mode "$mode_gaps_bottom" {
    bindsym plus  gaps bottom current plus 5
    bindsym minus gaps bottom current minus 5
    bindsym 0     gaps bottom current set 0

    bindsym Shift+plus  gaps bottom all plus 5
    bindsym Shift+minus gaps bottom all minus 5
    bindsym Shift+0     gaps bottom all set 0

    bindsym Return mode "$mode_gaps"
    bindsym Ctrl+bracketleft mode "default"
    bindsym $mod+Shift+g mode "default"
}
mode "$mode_gaps_left" {
    bindsym plus  gaps left current plus 5
    bindsym minus gaps left current minus 5
    bindsym 0     gaps left current set 0

    bindsym Shift+plus  gaps left all plus 5
    bindsym Shift+minus gaps left all minus 5
    bindsym Shift+0     gaps left all set 0

    bindsym Return mode "$mode_gaps"
    bindsym Ctrl+bracketleft mode "default"
    bindsym $mod+Shift+g mode "default"
}

gaps outer 0
gaps inner 0

# default orientation
workspace_layout tabbed

# desktop background
exec feh --bg-fill ~/Pictures/wallpaper.jpg

# hide window title bar
for_window [class="^.*"] border pixel 3
for_window [floating] border normal
default_border normal
default_floating_border normal

hide_edge_borders smart_no_gaps

title_align center

floating_minimum_size 100 x 100
floating_maximum_size 1800 x 1000

# move workspace to another monitor
bindsym $mod+$alt+h move workspace to output left
bindsym $mod+$alt+l move workspace to output right
bindsym $mod+$alt+j move workspace to output down
bindsym $mod+$alt+k move workspace to output up

# Pulse Audio controls
bindsym $mod+plus exec "amixer -D pulse sset Master 1%+"
bindsym $mod+minus exec "amixer -D pulse sset Master 1%-"
bindsym $mod+Shift+m exec "amixer -D pulse sset Master mute"
bindsym $mod+Shift+u exec "amixer -D pulse sset Master unmute"

# mute microphone
bindsym $mod+Ctrl+m exec "amixer set Capture nocap"
# unmute microphone
bindsym $mod+Ctrl+u exec "amixer set Capture cap"

# Brightness controls
bindsym $mod+Shift+plus exec "sudo brightnessctl set 5%+"
bindsym $mod+Shift+minus exec "sudo brightnessctl set 5%-"

# system control (shutdown, reboot, etc.)
set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id "i3lock -c 000000", mode "default"
    bindsym e exec --no-startup-id "i3-msg exit", mode "default"
    bindsym s exec --no-startup-id "sudo systemctl suspend", mode "default"
    bindsym h exec --no-startup-id "sudo systemctl hibernate", mode "default"
    bindsym r exec --no-startup-id "sudo systemctl reboot", mode "default"
    bindsym Shift+s exec --no-startup-id "sudo systemctl poweroff", mode "default"

# back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Ctrl+bracketleft mode "default"
}
bindsym $mod+Shift+Escape mode "$mode_system"

# -----------------------------------------------------------
# move mouse cursor using keyboard
# dependency: xdotool
# https://www.reddit.com/r/i3wm/comments/3btki2/use_the_mouse_cursor_from_the_keyboard/
mode "mouse" {

# set speeds here
    set $slow 5
    set $quick 40
    set $fast 100

# Mouse movement (slow/fine-tuned) -- vim keybindings
    bindsym Shift+h exec xdotool mousemove_relative -- -$slow 0
    bindsym Shift+j exec xdotool mousemove_relative 0 $slow
    bindsym Shift+k exec xdotool mousemove_relative -- 0 -$slow
    bindsym Shift+l exec xdotool mousemove_relative $slow 0

# Mouse movement (quicker) -- vim keybindings
    bindsym h exec xdotool mousemove_relative -- -$quick 0
    bindsym j exec xdotool mousemove_relative 0 $quick
    bindsym k exec xdotool mousemove_relative -- 0 -$quick
    bindsym l exec xdotool mousemove_relative $quick 0

# Mouse movement (faster) -- vim keybindings
    bindsym Ctrl+h exec xdotool mousemove_relative -- -$fast 0
    bindsym Ctrl+j exec xdotool mousemove_relative 0 $fast
    bindsym Ctrl+k exec xdotool mousemove_relative -- 0 -$fast
    bindsym Ctrl+l exec xdotool mousemove_relative $fast 0

# Left Click
    bindsym f exec xdotool click 1

# Middle Click
    bindsym d exec xdotool click 2

# Right Click
    bindsym s exec xdotool click 3

# Left Click-and-drag
    bindsym Shift+f exec xdotool mousedown 1

# Middle Click-and-drag 
    bindsym Shift+d exec xdotool mousedown 2

# Right Click-and-drag
    bindsym Shift+s exec xdotool mousedown 3

# Left Drag release
    bindsym Ctrl+f exec xdotool mouseup 1

# Middle Drag release
    bindsym Ctrl+d exec xdotool mouseup 2

# Right Drag release
    bindsym Ctrl+s exec xdotool mouseup 3

# Scroll down
    bindsym $mod+j exec xdotool click 5
# Scroll up
    bindsym $mod+k exec xdotool click 4
# Scroll left
    bindsym $mod+Shift+j exec xdotool click 6
# Scroll right
    bindsym $mod+Shift+k exec xdotool click 7

# return to normal keybindings -- IMPORTANT!!
    bindsym $mod+m mode "default"
    bindsym Ctrl+bracketleft mode "default"

# go to vim mode
    bindsym $mod+0x2c mode "vim"

# these should still work
    bindsym $mod+1 workspace $workspace1
    bindsym $mod+2 workspace $workspace2
    bindsym $mod+3 workspace $workspace3
    bindsym $mod+4 workspace $workspace4
    bindsym $mod+5 workspace $workspace5
    bindsym $mod+6 workspace $workspace6
    bindsym $mod+7 workspace $workspace7
    bindsym $mod+8 workspace $workspace8
    bindsym $mod+9 workspace $workspace9
    bindsym $mod+0 workspace $workspace0

# Pulse Audio controls
    bindsym $mod+plus exec "amixer -D pulse sset Master 1%+"
    bindsym $mod+minus exec "amixer -D pulse sset Master 1%-"
    bindsym $mod+Shift+m exec "amixer -D pulse sset Master mute"
    bindsym $mod+Shift+u exec "amixer -D pulse sset Master unmute"

# mute microphone
    bindsym $mod+Ctrl+m exec "amixer set Capture nocap"
# unmute microphone
    bindsym $mod+Ctrl+u exec "amixer set Capture cap"

# Brightness controls
    bindsym $mod+Shift+plus exec "sudo brightnessctl set 5%+"
    bindsym $mod+Shift+minus exec "sudo brightnessctl set 5%-"
}

bindsym $mod+m mode "mouse"
# -----------------------------------------------------------

# ------------------------------------------------------------
mode "vim" {

    # Enter vim motion mode
    bindsym Escape mode "vim_normal"

    # go to mouse mode
    bindsym $mod+m mode "mouse"

# these should still work
    bindsym $mod+1 workspace $workspace1
    bindsym $mod+2 workspace $workspace2
    bindsym $mod+3 workspace $workspace3
    bindsym $mod+4 workspace $workspace4
    bindsym $mod+5 workspace $workspace5
    bindsym $mod+6 workspace $workspace6
    bindsym $mod+7 workspace $workspace7
    bindsym $mod+8 workspace $workspace8
    bindsym $mod+9 workspace $workspace9
    bindsym $mod+0 workspace $workspace0

# Pulse Audio controls
    bindsym $mod+plus exec "amixer -D pulse sset Master 1%+"
    bindsym $mod+minus exec "amixer -D pulse sset Master 1%-"
    bindsym $mod+Shift+m exec "amixer -D pulse sset Master mute"
    bindsym $mod+Shift+u exec "amixer -D pulse sset Master unmute"

# mute microphone
    bindsym $mod+Ctrl+m exec "amixer set Capture nocap"
# unmute microphone
    bindsym $mod+Ctrl+u exec "amixer set Capture cap"

# Brightness controls
    bindsym $mod+Shift+plus exec "sudo brightnessctl set 5%+"
    bindsym $mod+Shift+minus exec "sudo brightnessctl set 5%-"

# return to normal keybindings -- IMPORTANT!!
    # 0x2c is the keycode for comma
    bindsym $mod+0x2c mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# 0x2c is the keycode for comma
bindsym $mod+0x2c mode "vim"

mode "vim_normal" {
  # Emulate cursor movement (up, down, left, right) using k, j, h, l keys
  bindsym k exec --no-startup-id xdotool keyup k key Up
  bindsym j exec --no-startup-id xdotool keyup j key Down
  bindsym h exec --no-startup-id xdotool keyup h key Left
  bindsym l exec --no-startup-id xdotool keyup l key Right

  bindsym w exec --no-startup-id xdotool keyup w key Ctrl+Right
  bindsym b exec --no-startup-id xdotool keyup b key Ctrl+Left
  bindsym Ctrl+k exec --no-startup-id xdotool keyup k keyup Control key Ctrl+Up
  bindsym Ctrl+j exec --no-startup-id xdotool keyup j keyup Control key Ctrl+Down
  # Shell's Ctrl+a → Home
  bindsym Ctrl+a exec --no-startup-id xdotool keyup a keyup Control key Home
  # Shell's Ctrl+e → End
  bindsym Ctrl+e exec --no-startup-id xdotool keyup e keyup Control key End
  # Vim motion Ctrl+h → BackSpace
  bindsym Ctrl+h exec --no-startup-id xdotool keyup h keyup Control key BackSpace
  # Vim motion Ctrl+w → Ctrl+BackSpace
  bindsym Ctrl+w exec --no-startup-id xdotool keyup w keyup Control key Ctrl+BackSpace
  # d → Delete
  bindsym d exec --no-startup-id xdotool keyup d key Delete
  # Ctrl+d (Shell's Alt+d doesn't work) → Ctrl+Delete
  bindsym Ctrl+d exec --no-startup-id xdotool keyup d keyup Control key Ctrl+Delete
  # Vim motion Ctrl+u → Shift+Home+BackSpace
  bindsym Ctrl+u exec --no-startup-id xdotool keyup u keyup Control key Shift+Home BackSpace
  # Vim motion Shift+d → Shift+End+Delete
  bindsym Shift+d exec --no-startup-id xdotool keyup d keyup Shift key Shift+End Delete
  # Exit vim motion mode
  bindsym Escape mode "vim"
  bindsym Ctrl+bracketleft mode "vim"
  # go to mouse mode
  bindsym $mod+m mode "mouse"
}

# ------------------------------------------------------------

# printscreen (flameshot)
# https://github.com/flameshot-org/flameshot#usage
bindsym $mod+Shift+p exec flameshot gui
bindsym $mod+Ctrl+p exec flameshot full -c -p $HOME/Pictures
set $mode_printscreen Monitor (0), Monitor (1)
mode "$mode_printscreen" {
  bindsym 0 exec flameshot screen -n 0 -c -p $HOME/Pictures; mode "default"
  bindsym 1 exec flameshot screen -n 1 -c -p $HOME/Pictures; mode "default"

  # back to normal: Enter or Ctrl+[
  bindsym Return mode "default"
  bindsym Ctrl+bracketleft mode "default"
}
bindsym $mod+p mode "$mode_printscreen"

# printscreen (shutter)
bindsym Print exec shutter -s

# open file explorer GUI
bindsym $mod+Shift+f exec nemo --no-desktop

# compton
# exec compton

# presentation mode
set $mode_presentation present
# Start presentation mode with boomer on by default
bindsym $mod+F5 mode "$mode_presentation"; exec sh -c '$HOME/.local/bin/projecteur_action.sh default'; exec sh -c 'pkill boomer || boomer';
# Start presentation mode with projecteur on by default
bindsym $mod+F2 mode "$mode_presentation"; exec sh -c '$HOME/.local/bin/projecteur_action.sh default'; exec sh -c 'projecteur &'; exec sh -c 'sleep 0.2 && projecteur -c spot=toggle';
# Start presentation mode with gromit-mpx on by default
bindsym $mod+F1 mode "$mode_presentation"; exec sh -c '$HOME/.local/bin/gromit_mpx_action.sh';

mode "$mode_presentation" {
  bindsym $alt+1 exec --no-startup-id sh -c '$HOME/.local/bin/gromit_mpx_action.sh'
  bindsym $alt+2 exec --no-startup-id sh -c 'projecteur &'; exec --no-startup-id sh -c 'sleep 0.2 && projecteur -c spot=toggle'
  bindsym $alt+grave exec sh -c '$HOME/.local/bin/projecteur_action.sh default'; exec sh -c 'projecteur -c quit'
  bindsym $alt+3 exec sh -c '$HOME/.local/bin/projecteur_action.sh increaseSpotSize';
  bindsym $alt+4 exec sh -c '$HOME/.local/bin/projecteur_action.sh decreaseSpotSize';
  bindsym $alt+Shift+3 exec sh -c '$HOME/.local/bin/projecteur_action.sh zoomIn'; exec sh -c 'projecteur -c quit'
  bindsym $alt+Shift+4 exec sh -c '$HOME/.local/bin/projecteur_action.sh zoomOut'; exec sh -c 'projecteur -c quit'
  bindsym $alt+5 exec sh -c 'pkill boomer || boomer';

  # back to normal
  bindsym $mod+F3 mode "default"; exec sh -c 'projecteur -c quit'; exec sh -c 'pkill gromit-mpx'; exec sh -c 'pkill boomer'
  bindsym $mod+F5 mode "default"; exec sh -c 'projecteur -c quit'; exec sh -c 'pkill gromit-mpx'; exec sh -c 'pkill boomer'

  # printscreen mapping should work in presentation mode
  bindsym $mod+Shift+p exec flameshot gui
  bindsym $mod+Ctrl+p exec flameshot full -c -p $HOME/Pictures
  bindsym Print exec shutter -s

# enter fullscreen mode for the focused container
  bindsym $mod+f fullscreen toggle
}
bindsym $mod+F3 mode "$mode_presentation"; exec sh -c '$HOME/.local/bin/projecteur_action.sh default'

# presentation (pen tool to draw on the screen)
# bindsym Ctrl+F1 exec --no-startup-id sh -c 'pkill gromit-mpx || gromit-mpx'

# presentation (cursor spotlight)
# mode "$mode_projecteur" {
#   bindsym Ctrl+grave exec sh -c '$HOME/.local/bin/projecteur_action.sh default'; mode "default"; exec sh -c 'projecteur -c quit'
#   bindsym Ctrl+1 exec sh -c '$HOME/.local/bin/projecteur_action.sh zoomIn'; mode "default"; exec sh -c 'projecteur -c quit'
#   bindsym Ctrl+2 exec sh -c '$HOME/.local/bin/projecteur_action.sh zoomOut'; mode "default"; exec sh -c 'projecteur -c quit'
#   bindsym Ctrl+Shift+1 exec sh -c '$HOME/.local/bin/projecteur_action.sh increaseSpotSize';
#   bindsym Ctrl+Shift+2 exec sh -c '$HOME/.local/bin/projecteur_action.sh decreaseSpotSize';
#
#   # back to normal: Enter or Escape
#   bindsym Ctrl+F3 mode "default"; exec sh -c 'projecteur -c quit'
#   bindsym Escape mode "default"; exec sh -c 'projecteur -c quit'
# }
# bindsym Ctrl+F3 exec --no-startup-id sh -c 'projecteur &'; exec --no-startup-id sh -c 'sleep 0.2 && projecteur -c spot=toggle'; mode "$mode_projecteur"

# mod + mouse up and mouse down to scroll through workspaces
bindsym --whole-window --border $mod+button4 workspace prev_on_output
bindsym --whole-window --border $mod+button5 workspace next_on_output

exec source ~/.zshrc

# custom keyboard shortcut
# insert current date time
bindsym --release $mod+t exec --no-startup-id sh -c '$HOME/.local/bin/date.sh'

# open terminal once log in
# exec --no-startup-id i3-msg 'workspace 2; exec /usr/bin/alacritty -e tmux'

# Execute toggle between light and dark colorscheme command
# this is not being used anymore
# bindsym $mod+Shift+b exec $HOME/.local/bin/toggle-colorscheme.sh

# open monitor configuration
bindsym $mod+Shift+w exec arandr

# initialize most of the stuff
# quickfix for the pasystray not showing
# quickfix for the xcompmgr not running
bindsym $mod+o exec kitty -e $HOME/.local/bin/init_stuff.sh; exec sh -c 'pkill -9 pasystray || true && pasystray &>/dev/null &'; exec sh -c 'pkill -9 xcompmgr || true && xcompmgr -c &>/dev/null &'; 

# enable / disable caps mode (show caps mode on the i3 status bar)
# https://faq.i3wm.org/question/1258/i3bari3status-is-it-possible-to-have-caps-lock-and-num-lock-indicator.1.html
mode "caps" {
    bindsym Caps_Lock mode "default"
}
bindsym Caps_Lock mode "caps"

# integration with dunst (notification daemon)
# redisplay last message
bindsym $mod+Shift+grave exec dunstctl history-pop
# close notification
bindsym $mod+c exec dunstctl close
# close all notifications
bindsym $mod+Shift+c exec dunstctl close-all
